<UserControl x:Class="Vts.Gui.Wpf.View.ForwardSolverView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:view="clr-namespace:Vts.Gui.Wpf.View"
             xmlns:viewModel="clr-namespace:Vts.Gui.Wpf.ViewModel"
             VerticalAlignment="Top">

    <!-- This is to provide design-time support. It is expected that the ViewModel be created in the constructor -->
    <UserControl.DataContext>
        <viewModel:ForwardSolverViewModel />
    </UserControl.DataContext>
    <StackPanel Orientation="Vertical" 
                VerticalAlignment="Top" 
                Width="480">
        <!-- Solver Engine -->
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding ConverterParameter=Label_FwdSolver, Converter={StaticResource MyResourceToStringConverter}}" FontWeight="Bold" Width="75" />
            <view:ComboBoxOptionView DataContext="{Binding ForwardSolverTypeOptionVM}" HorizontalAlignment="Left"
                                     VerticalAlignment="Top" />
        </StackPanel>
        <!-- Gaussian Beam Diameter -->
        <StackPanel Orientation="Horizontal" 
                    Visibility="{Binding IsGaussianForwardModel, Converter={StaticResource MyBooleanToVisibilityConverter}}" 
                    Margin="0,10,0,0">
            <TextBlock Text="{Binding ConverterParameter=Label_GaussianBeam, Converter={StaticResource MyResourceToStringConverter}}" 
                       Margin="10,0,4,0" 
                       FontWeight="DemiBold"
                       VerticalAlignment="Center" />
            <TextBox Width="40" 
                     Text="{Binding ForwardSolver.BeamDiameter, Mode=TwoWay}" 
                     VerticalAlignment="Bottom"
                     KeyDown="TextBox_KeyDown" />
            <TextBlock Text="{Binding ConverterParameter=Label_GaussianBeamUnits, Converter={StaticResource MyResourceToStringConverter}}" 
                       Margin="2,0,0,0" 
                       VerticalAlignment="Center" />
        </StackPanel>
        <!-- Solution Domain -->
        <view:SolutionDomainOptionView DataContext="{Binding SolutionDomainTypeOptionVM}" 
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top" 
                                       Margin="0,15,0,0" />
        <!-- Detection Parameters -->
        <ItemsControl ItemsSource="{Binding AllRangeVMs, UpdateSourceTrigger=PropertyChanged}" 
                      Margin="0,0,0,0">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <view:RangeView DataContext="{Binding}" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Top"
                                    Margin="0,3,0,0" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- Optical Properties (single- or multi-region property editor shown, depending on forward model type -->
        <StackPanel Visibility="{Binding ShowOpticalProperties, Converter={StaticResource MyBooleanToVisibilityConverter}}" 
                    Margin="0,10,0,0">
            <StackPanel.Resources>
                <DataTemplate x:Key="SemiInfinite">
                    <StackPanel>
                        <view:OpticalPropertyView DataContext="{Binding TissueInputVM}" 
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Top" 
                                                  Margin="0,3,0,0" />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="MultiRegion">
                    <StackPanel>
                        <view:MultiRegionOpticalPropertyView DataContext="{Binding TissueInputVM}" 
                                                             HorizontalAlignment="Left"
                                                             VerticalAlignment="Top" 
                                                             Margin="0,3,0,0" />
                    </StackPanel>
                </DataTemplate>
            </StackPanel.Resources>
            <ContentControl Content="{Binding}">
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSemiInfinite}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource SemiInfinite}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMultiRegion}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource MultiRegion}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </StackPanel>

        <Grid Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!-- Model/Analysis Output -->
            <view:RadioButtonOptionView Grid.Column="0" 
                                        DataContext="{Binding ForwardAnalysisTypeOptionVM}"
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Top" 
                                        Margin="0,3,0,0" />
            <!-- Button -->
            <Button
                Grid.Column="1"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Right"
                Command="{Binding ExecuteForwardSolverCommand}"
                Content="{Binding ConverterParameter=Button_PlotReflectance, Converter={StaticResource MyResourceToStringConverter} }"
                Width="100" Height="25" Margin="0,0,10,0" />
        </Grid>
    </StackPanel>
</UserControl>